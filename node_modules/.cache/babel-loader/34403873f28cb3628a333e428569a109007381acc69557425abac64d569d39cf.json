{"ast":null,"code":"var _jsxFileName = \"C:\\\\RAKAMIN-BOOTCAMP\\\\TASK12-REACT-CLONE\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ScoreBoard, Board, ResetButton } from \"./component/index\";\nimport PropsContext from \"./PropsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [xPlaying, setXPlaying] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [scores, setScores] = useState({\n    xScore: 0,\n    oScore: 0\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const selectSquare = boxIdx => {\n    //Step1 : Update the board\n    const updatedBoard = squares.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n    setSquares(updatedBoard);\n\n    //Step 2: Check if either player has win the game\n    const winner = calculateWinner(updatedBoard);\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (setScores ? \"X\" : \"O\");\n    }\n\n    // if (winner) {\n    //   if (winner === \"O\") {\n    //     let { oScore } = scores;\n    //     oScore += 1;\n    //     setScores({ ...scores, oScore });\n    //   } else {\n    //     let { xScore } = scores;\n    //     xScore += 1;\n    //     setScores({ ...scores, xScore });\n    //   }\n    // }\n\n    //Step 3: Change active player\n    setXPlaying(!xPlaying);\n  };\n  const calculateWinner = squares => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n        setGameOver(true);\n        return squares[a];\n      }\n    }\n  };\n  const restart = () => {\n    setGameOver(false);\n    setSquares(Array(9).fill(null));\n  };\n  const props = {\n    scores,\n    xPlaying,\n    squares,\n    gameOver,\n    restart\n  };\n  return /*#__PURE__*/_jsxDEV(PropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center px-5 py-8 m-5 border border-gray-100 rounded-sm shadow-2xl sm:px-16 sm:py-20 sm:m-20\",\n      children: [/*#__PURE__*/_jsxDEV(ScoreBoard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        onClick: gameOver ? restart : selectSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResetButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dcynL2QhwtoW1Jwc8v0TZm8XVA4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ScoreBoard","Board","ResetButton","PropsContext","jsxDEV","_jsxDEV","App","_s","xPlaying","setXPlaying","squares","setSquares","Array","fill","scores","setScores","xScore","oScore","gameOver","setGameOver","selectSquare","boxIdx","updatedBoard","map","value","idx","winner","calculateWinner","status","lines","i","length","a","b","c","restart","props","Provider","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/RAKAMIN-BOOTCAMP/TASK12-REACT-CLONE/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ScoreBoard, Board, ResetButton } from \"./component/index\";\nimport PropsContext from \"./PropsContext\";\n\nconst App = () => {\n  const [xPlaying, setXPlaying] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [scores, setScores] = useState({ xScore: 0, oScore: 0 });\n  const [gameOver, setGameOver] = useState(false);\n\n  const selectSquare = (boxIdx) => {\n    //Step1 : Update the board\n    const updatedBoard = squares.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n\n    setSquares(updatedBoard);\n\n    //Step 2: Check if either player has win the game\n    const winner = calculateWinner(updatedBoard);\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (setScores ? \"X\" : \"O\");\n    }\n\n    // if (winner) {\n    //   if (winner === \"O\") {\n    //     let { oScore } = scores;\n    //     oScore += 1;\n    //     setScores({ ...scores, oScore });\n    //   } else {\n    //     let { xScore } = scores;\n    //     xScore += 1;\n    //     setScores({ ...scores, xScore });\n    //   }\n    // }\n\n    //Step 3: Change active player\n    setXPlaying(!xPlaying);\n  };\n\n  const calculateWinner = (squares) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[b] === squares[c]\n      ) {\n        setGameOver(true);\n        return squares[a];\n      }\n    }\n  };\n\n  const restart = () => {\n    setGameOver(false);\n    setSquares(Array(9).fill(null));\n  };\n\n  const props = {\n    scores,\n    xPlaying,\n    squares,\n    gameOver,\n    restart,\n  };\n\n  return (\n    <PropsContext.Provider value={props}>\n      <div className=\"flex flex-col items-center justify-center px-5 py-8 m-5 border border-gray-100 rounded-sm shadow-2xl sm:px-16 sm:py-20 sm:m-20\">\n        <ScoreBoard />\n        <Board onClick={gameOver ? restart : selectSquare} />\n        <ResetButton />\n      </div>\n    </PropsContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}