{"ast":null,"code":"var _jsxFileName = \"C:\\\\RAKAMIN-BOOTCAMP\\\\TASK12-REACT-CLONE\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [xPlaying, setXPlaying] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [scores, setScores] = useState({\n    xScore: 0,\n    oScore: 0\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  const selectSquare = boxIdx => {\n    //Step1 : Update the board\n    const updatedBoard = squares.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n    setSquares(updatedBoard);\n\n    //Step 2: Check if either player has win the game\n    const winner = calculateWinner(updatedBoard);\n    if (winner) {\n      if (winner === \"O\") {\n        let {\n          oScore\n        } = scores;\n        oScore += 1;\n        setScores({\n          ...scores,\n          oScore\n        });\n      } else {\n        let {\n          xScore\n        } = scores;\n        xScore += 1;\n        setScores({\n          ...scores,\n          xScore\n        });\n      }\n    }\n\n    //Step 3: Change active player\n    setXPlaying(!xPlaying);\n  };\n  const calculateWinner = () => {\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        setGameOver(true);\n        return squares[a];\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"src/App.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 14\n      }, this), \" and save to reload.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dcynL2QhwtoW1Jwc8v0TZm8XVA4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","xPlaying","setXPlaying","squares","setSquares","Array","fill","scores","setScores","xScore","oScore","gameOver","setGameOver","lines","selectSquare","boxIdx","updatedBoard","map","value","idx","winner","calculateWinner","i","length","a","b","c","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/RAKAMIN-BOOTCAMP/TASK12-REACT-CLONE/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [xPlaying, setXPlaying] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const [scores, setScores] = useState({ xScore: 0, oScore: 0 });\n  const [gameOver, setGameOver] = useState(false);\n\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n\n  const selectSquare = (boxIdx) => {\n    //Step1 : Update the board\n    const updatedBoard = squares.map((value, idx) => {\n      if (idx === boxIdx) {\n        return xPlaying ? \"X\" : \"O\";\n      } else {\n        return value;\n      }\n    });\n\n    setSquares(updatedBoard);\n\n    //Step 2: Check if either player has win the game\n    const winner = calculateWinner(updatedBoard);\n\n    if (winner) {\n      if (winner === \"O\") {\n        let { oScore } = scores;\n        oScore += 1;\n        setScores({ ...scores, oScore });\n      } else {\n        let { xScore } = scores;\n        xScore += 1;\n        setScores({ ...scores, xScore });\n      }\n    }\n\n    //Step 3: Change active player\n    setXPlaying(!xPlaying);\n  };\n\n  const calculateWinner = () => {\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        setGameOver(true);\n        return squares[a];\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <p>\n        Edit <code>src/App.js</code> and save to reload.\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}